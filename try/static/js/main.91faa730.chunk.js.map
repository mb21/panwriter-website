{"version":3,"sources":["renderPreview/throttle.ts","renderPreview/scrolling.ts","renderPreview/convertYaml.ts","appState/appStateReducer.ts","components/Editor/Editor.tsx","renderPreview/templates/getCss.ts","renderPreview/templates/templates.ts","assets/preview.pandoc-styles.css","components/ColorPicker/ColorPicker.tsx","components/MetaEditor/back.svg","components/MetaEditor/MetaEditor.tsx","components/Preview/Preview.tsx","appState/AppState.ts","components/Button.tsx","components/Toolbar/macOS_window_close.svg","components/Toolbar/macOS_window_maximize.svg","components/Toolbar/macOS_window_minimize.svg","components/Toolbar/metaEditor.svg","components/Toolbar/notes.svg","components/Toolbar/page.svg","components/Toolbar/vertical_split.svg","components/Toolbar/visibility.svg","components/Toolbar/Toolbar.tsx","renderPreview/convertMd.ts","renderPreview/renderPreviewImpl.ts","renderPreview/renderPreview.ts","components/App/App.tsx","website.md","index.tsx"],"names":["throttle","fn","wait","timeout","context","args","result","previous","later","Date","now","undefined","apply","remaining","this","arguments","clearTimeout","setTimeout","editor","scrollEditorFn","scrollMap","reverseScrollMap","frameWindow","scrollSyncTimeout","editorOffset","paginated","printPreview","print","window","ipcApi","on","printFile","refreshEditor","refresh","scrollPreview","buildScrollMap","scrollTop","Math","round","getScrollInfo","top","scrollTo","lineOffsets","knownLineOffsets","offsetSum","eachLine","line","height","push","lastEl","selector","el","document","querySelectorAll","parseInt","getAttribute","lineOffset","elOffset","getBoundingClientRect","scrollY","ceil","bottom","unshift","j","i","a","b","console","error","resetScrollMaps","yamlFrontRe","parseYaml","md","yaml","yamlStr","bodyMd","meta","results","exec","metaObj","jsYaml","safeLoad","schema","JSON_SCHEMA","Array","warn","e","message","serializeMetaToMd","doc","Object","keys","length","safeDump","skipInvalid","trim","appStateReducer","state","action","type","fileDirty","key","value","split","metaEditorOpen","Editor","props","dispatch","onBeforeChange","_ed","_diff","onScroll","editorDidMount","onEditorDidMount","autoCursor","options","codeMirrorOptions","mode","name","base","theme","indentUnit","tabSize","lineNumbers","lineWrapping","autofocus","extraKeys","Enter","Tab","focus","charWidth","defaultCharWidth","listRe","cm","elt","txt","text","matches","match","extraIndent","off","countColumn","getOption","style","textIndent","paddingLeft","ed","codeMirrorLines","querySelector","getComputedStyle","getPropertyValue","editorScrollFrame","preventDefault","registerScrollEditor","find","execCommand","findNext","findPrevious","replaceSelection","getSelection","addBold","s","join","addItalic","addStrikethrough","template","str","arr","varName","substr","default","parseToTemplate","defaultVars","reduce","acc","t","extractDefaultVars","getCss","variables","map","v","interpolateTemplate","ColorPicker","id","onChange","showPicker","setShowPicker","useState","className","onFocus","target","background","onClick","color","disableAlpha","presetColors","c","hex","MetaEditor","renderKv","kv","htmlFor","label","renderInput","onLoad","onDone","placeholder","val","toString","common","step","renderOption","alt","src","back","draggable","metaKvs","layoutKvs","o","startsWith","endsWith","slice","Preview","forwardRef","ref","zoom","setZoom","transform","width","transformOrigin","z","viewSplits","Button","active","children","Toolbar","fileName","send","macIcons","metaEditor","page","splitIcons","close","macCloseIcon","maximize","macMaximizeIcon","minimize","macMinimizeIcon","onlyEditor","notes","verticalSplit","onlyPreview","visibility","mdItPandoc","markdownItPandoc","defaultImageRender","renderer","rules","image","mdItSourceMapPlugin","nrLinesOffset","temp","renderToken","bind","tokens","idx","token","level","attrPush","getNrOfYamlLines","nrOfLines","singleFrame","frame1","frame2","injectMathCss","contentWindow","forEach","href","head","appendChild","createLinkEl","async","insertFrame","noScriptsInFrame","frame","createElement","setAttribute","Promise","resolve","addEventListener","returnValue","hash","hrefStart","element","scrollIntoView","openLink","open","interceptClicks","renderAndSwap","previewDiv","renderFn","f1","f2","remove","setupSwapFrames","Error","then","renderPlain","setupSingleFrame","content","html","body","innerHTML","createStyleEl","textContent","link","pagedjsStyleEl","stateBuffer","renderInProgress","needsRerender","renderPreview","renderNext","render","catch","stack","isPaginated","initScroll","previewDivRef","filePath","env","self","aIndex","attrIndex","srcTuple","attrs","dirname","use","convertMd","current","cssStr","metaHtml","frameHead","frameBody","insertAdjacentHTML","PagedConfig","auto","readyState","once","PagedPolyfill","preview","renderPaged","App","useReducer","initialState","setStateAndDispatch","useEffect","toLowerCase","createRef","sendPlatform","platform","classList","add","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91faa730.chunk.js","sourcesContent":["export const throttle = function<T>(fn: (...args: any[]) => T, wait: number, timeout?: NodeJS.Timeout) {\n  // adapted from https://github.com/jashkenas/underscore/blob/master/underscore.js#L842\n  var context: any;\n  var args: any;\n  var result: T;\n  var previous = 0;\n\n  var later = function() {\n    previous = Date.now();\n    timeout = undefined;\n    result = fn.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function(this: any) {\n    var now = Date.now();\n    var remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = undefined;\n      }\n      previous = now;\n      result = fn.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  return throttled;\n};\n","import { Editor } from 'codemirror'\nimport { throttle } from './throttle'\n\nlet editor: Editor\n  , editorOffset = 0\n  , scrollEditorFn: ((e: Event) => void) | undefined\n  , scrollMap: number[] | undefined\n  , reverseScrollMap: number[] | undefined\n  , frameWindow: Window | undefined\n  , scrollSyncTimeout: NodeJS.Timeout | undefined // shared between scrollPreview and scrollEditorFn\n  , paginated = false\n\nexport const printPreview = () => {\n  if (frameWindow) {\n    frameWindow.print()\n  }\n}\n\nwindow.ipcApi?.on.printFile(printPreview)\n\nexport const initScroll = (contentWindow: Window, isPaginated: boolean) => {\n  paginated = isPaginated\n  resetScrollMaps();\n  frameWindow = contentWindow\n  frameWindow.addEventListener('resize', resetScrollMaps);\n  if (scrollEditorFn) {\n    frameWindow.addEventListener('scroll', scrollEditorFn);\n  }\n}\n\nexport const clearPreview = () => {\n  frameWindow = undefined;\n}\n\nexport const refreshEditor = () => {\n  if (editor) {\n    editor.refresh()\n  }\n}\n\nexport const scrollPreview = throttle(() => {\n  if (frameWindow) {\n    if (!scrollMap) {\n      buildScrollMap(editor, editorOffset);\n    }\n    var scrollTop = Math.round(editor.getScrollInfo().top)\n      , scrollTo = scrollMap![scrollTop]\n      ;\n    if (scrollTo !== undefined && frameWindow) {\n      frameWindow.scrollTo(0, scrollTo);\n    }\n  }\n}, 30, scrollSyncTimeout);\n\nexport const registerScrollEditor = (ed: Editor) => {\n  editor = ed;\n  const codeMirrorLines = document.querySelector('.CodeMirror-lines')\n  editorOffset = codeMirrorLines\n    ? parseInt(window.getComputedStyle(codeMirrorLines).getPropertyValue('padding-top'), 10)\n    : 0\n  var editorScrollFrame = document.querySelector('.CodeMirror-scroll')\n\n  scrollEditorFn = throttle( (e: Event) => {\n    e.preventDefault();\n    if (frameWindow !== undefined) {\n      if (!reverseScrollMap) {\n        buildScrollMap(editor, editorOffset);\n      }\n      for (var i=frameWindow.scrollY; i>=0; i--) {\n        if (reverseScrollMap![i] !== undefined) {\n          editorScrollFrame?.scrollTo(0, reverseScrollMap![i])\n          break;\n        }\n      }\n    }\n  }, 30, scrollSyncTimeout);\n}\n\n/*\n * Private functions\n */\n\nconst buildScrollMap = (editor: Editor, editorOffset: number) => {\n  if (!frameWindow) {\n    console.error('frameWindow was undefined in buildScrollMap')\n    return\n  }\n\n  // scrollMap maps source-editor-line-offsets to preview-element-offsets\n  // (offset is the number of vertical pixels from the top)\n  scrollMap = [];\n  scrollMap[0] = 0;\n  reverseScrollMap = [];\n\n  // lineOffsets[i] holds top-offset of line i in the source editor\n  var lineOffsets = [undefined as any as number, 0]\n    , knownLineOffsets = []\n    , offsetSum = 0\n    ;\n  editor.eachLine((line: any) => {\n    offsetSum += line.height;\n    lineOffsets.push(offsetSum);\n  });\n\n  var lastEl: Element | undefined = undefined\n    , selector = paginated ? '.pagedjs_page_content [data-source-line]'\n                           : 'body > [data-source-line]'\n    ;\n  for (const el of frameWindow.document.querySelectorAll(selector)) {\n    // for each element in the preview with source annotation\n    var line = parseInt(el.getAttribute('data-source-line') || '1', 10)\n      , lineOffset = lineOffsets[line]\n      , elOffset = Math.round(el.getBoundingClientRect().top + frameWindow.scrollY);\n      ;\n    // fill in the target offset for the corresponding editor line\n    if (scrollMap[lineOffset] === undefined) {\n      // after pagination, we can have two elements in the preview\n      // that have the same source line. We only use the first.\n      scrollMap[lineOffset] = elOffset - editorOffset;\n      knownLineOffsets.push(lineOffset)\n    }\n\n    lastEl = el;\n  }\n  if (lastEl) {\n    scrollMap[offsetSum] = Math.ceil(lastEl.getBoundingClientRect().bottom + frameWindow.scrollY);\n    knownLineOffsets.push(offsetSum);\n  }\n\n  if (knownLineOffsets[0] !== 0) {\n    // make sure line zero is in the list, to guarantee a smooth scrolling start\n    knownLineOffsets.unshift(0);\n  }\n\n  // fill in the blanks by interpolating between the two closest known line offsets\n  var j = 0;\n  for (var i=1; i < offsetSum; i++) {\n    if (scrollMap[i] === undefined) {\n      var a = knownLineOffsets[j]\n        , b = knownLineOffsets[j + 1]\n        ;\n      scrollMap[i] = Math.round(( scrollMap[b]*(i - a) + scrollMap[a]*(b - i) ) / (b - a));\n    } else {\n      j++;\n    }\n    reverseScrollMap[ scrollMap[i] ] = i;\n  }\n}\n\nconst resetScrollMaps = () => {\n  scrollMap = undefined;\n  reverseScrollMap = undefined;\n}\n","import jsYaml from 'js-yaml'\nimport { Doc, Meta } from '../appState/AppState'\n\n// from https://github.com/dworthen/js-yaml-front-matter/blob/master/src/index.js#L14\nconst yamlFrontRe = /^(-{3}(?:\\n|\\r)([\\w\\W]+?)(?:\\n|\\r)-{3})?([\\w\\W]*)*/\n\nexport const parseYaml = (md: string) => {\n  let yamlStr = ''\n    , bodyMd = md\n    , meta: Meta = {}\n    , yaml\n    , results = yamlFrontRe.exec(md)\n  try {\n    yaml = results?.[2]\n    if (yaml) {\n      const metaObj = jsYaml.safeLoad(yaml, {schema: jsYaml.JSON_SCHEMA})\n      if (typeof metaObj === 'object' && !(metaObj instanceof Array) ) {\n        yamlStr = yaml\n        bodyMd = results?.[3] || ''\n        meta = metaObj as Meta\n      } else {\n        console.warn(\"YAML wasn't an object\")\n      }\n    }\n  } catch(e) {\n    console.warn(\"Could not parse YAML\", e.message)\n  }\n  return { yaml: yamlStr, bodyMd, meta }\n}\n\nexport const serializeMetaToMd = (doc: Doc): string => {\n  const { meta, bodyMd } = doc\n  const yamlStr = Object.keys(meta).length > 0\n    ? jsYaml.safeDump(meta, {skipInvalid: true})\n    : ''\n  return (yamlStr ? '---\\n' + yamlStr + '---\\n\\n' : '') + bodyMd.trim()\n}\n","import { AppState } from './AppState'\nimport { refreshEditor } from '../renderPreview/scrolling'\nimport { parseYaml, serializeMetaToMd } from '../renderPreview/convertYaml'\nimport { Action } from './Action'\n\n\nexport const appStateReducer = (state: AppState, action: Action): AppState => {\n  switch (action.type) {\n    case 'closeMetaEditorAndSetMd': {\n      const doc = {\n        ...state.doc,\n        md: serializeMetaToMd(state.doc),\n        fileDirty: true\n      }\n      return { ...state, doc }\n    }\n    case 'setMdAndRender': {\n      const { md } = action\n      const doc = {\n        ...state.doc,\n        ...parseYaml(md),\n        md,\n        fileDirty: true\n      }\n      return { ...state, doc }\n    }\n    case 'setMetaAndRender': {\n      const { key, value } = action\n      const doc = { ...state.doc }\n      doc.meta[key] = value\n      // doc.fileDirty = true\n      return { ...state, doc }\n    }\n    case 'setSplitAndRender': {\n      const { split } = action\n      let { doc } = state\n      if (split !== 'onlyEditor') {\n        // for the case when the preview is shown for the first time\n        doc = { ...doc, ...parseYaml(doc.md) }\n      }\n      if (split !== 'onlyPreview') {\n        setTimeout(refreshEditor)\n      }\n      return { ...state, doc, split }\n    }\n    case 'toggleMetaEditorOpen': {\n      return { ...state, metaEditorOpen: !state.metaEditorOpen }\n    }\n    case 'togglePaginated': {\n      return { ...state, paginated: !state.paginated }\n    }\n    case 'updateDoc': {\n      const doc = { ...state.doc, ...action.doc }\n      return { ...state, doc }\n    }\n  }\n}\n","import { countColumn, Editor as CMEditor } from 'codemirror'\nimport 'codemirror/addon/dialog/dialog'\nimport 'codemirror/addon/search/search'\nimport 'codemirror/addon/search/searchcursor'\nimport 'codemirror/addon/search/jump-to-line'\nimport 'codemirror/addon/mode/overlay'\nimport 'codemirror/mode/markdown/markdown'\nimport 'codemirror/mode/yaml/yaml'\nimport 'codemirror/mode/yaml-frontmatter/yaml-frontmatter'\nimport 'codemirror/addon/edit/continuelist'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\n\nimport { AppState } from '../../appState/AppState'\nimport { Action }   from '../../appState/Action'\nimport { registerScrollEditor, scrollPreview } from '../../renderPreview/scrolling'\n\nimport './Editor.css'\n\ninterface Props {\n  state: AppState;\n  dispatch: React.Dispatch<Action>;\n}\n\nexport const Editor = (props: Props) => {\n  const { state, dispatch } = props\n  return (\n    <CodeMirror\n      onBeforeChange={ (_ed, _diff, md) =>\n        dispatch({ type: 'setMdAndRender', md })\n      }\n      onScroll={scrollPreview}\n      editorDidMount={onEditorDidMount}\n      value={state.doc.md}\n      autoCursor={true}\n      options={codeMirrorOptions}\n      />\n  )\n}\n\nconst codeMirrorOptions = {\n  mode: {\n    name: 'yaml-frontmatter'\n  , base: 'markdown'\n  }\n, theme: 'paper'\n, indentUnit: 4 // because of how numbered lists behave in CommonMark\n, tabSize: 4\n, lineNumbers: false\n, lineWrapping: true\n, autofocus: true\n, extraKeys: {\n    Enter: 'newlineAndIndentContinueMarkdownList'\n  , Tab: 'indentMore'\n  , 'Shift-Tab': 'indentLess'\n  }\n}\n\nconst onEditorDidMount = (editor: CMEditor) => {\n  editor.focus();\n\n  // adapted from https://codemirror.net/demo/indentwrap.html\n  const charWidth = editor.defaultCharWidth()\n  const basePadding = 4\n  // matches markdown list `-`, `+`, `*`, `1.`, `1)` and blockquote `>` markers:\n  // eslint-disable-next-line no-useless-escape\n  const listRe = /^(([-|\\+|\\*|\\>]|\\d+[\\.|\\)])\\s+)(.*)/\n\n  editor.on('renderLine', (cm, line, elt) => {\n    const txt = line.text\n    const matches = txt.trim().match(listRe)\n    if (matches && matches[1]) {\n      const extraIndent = matches[1].length\n      const columnCount = countColumn(txt, null, cm.getOption('tabSize') || 4)\n      const off = (columnCount + extraIndent) * charWidth\n      elt.style.textIndent = '-' + off + 'px';\n      elt.style.paddingLeft = (basePadding + off) + 'px';\n    }\n  });\n  editor.refresh();\n\n  registerScrollEditor(editor);\n\n  window.ipcApi?.on.find(         () => editor.execCommand('findPersistent'))\n  window.ipcApi?.on.findNext(     () => editor.execCommand('findPersistentNext'))\n  window.ipcApi?.on.findPrevious( () => editor.execCommand('findPersistentPrev'))\n\n\n  const replaceSelection = (fn: (s: string) => string) =>\n    editor.replaceSelection( fn( editor.getSelection() ) )\n\n  window.ipcApi?.on.addBold(          () => replaceSelection(s => ['**', s, '**'].join('')) )\n  window.ipcApi?.on.addItalic(        () => replaceSelection(s => ['_',  s, '_' ].join('')) )\n  window.ipcApi?.on.addStrikethrough( () => replaceSelection(s => ['~~', s, '~~'].join('')) )\n}\n","import { Doc } from '../../appState/AppState'\nimport { parseToTemplate, interpolateTemplate, extractDefaultVars } from './templates'\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport styles from '!!raw-loader!../../assets/preview.pandoc-styles.css'\n\nconst template = parseToTemplate(styles)\n\nexport const defaultVars = extractDefaultVars(template)\n\nexport const getCss = (doc: Doc) =>\n  interpolateTemplate(template, doc.meta)\n","import { Meta } from '../../appState/AppState'\n\ntype Template = Array<string | { varName: string; default: string }>;\n\n// This hacky parser only supports one syntax: `foobar $if(X)$$X$$else$Y$endif$`\n// which is converted to `[\"foobar \", {varName: \"X\", default: \"Y\"}, ... ]`\nexport const parseToTemplate = (str: string): Template => {\n  const arr = str.split(/\\$if\\([\\w\\-.]+\\)\\$(\\$[\\w\\-.]+)\\$\\$else\\$([^$]+)\\$endif\\$/g);\n  const template: Template = [];\n  for (let i=0; i<arr.length; i++) {\n    if (arr[i][0] === '$') {\n      const varName = arr[i].substr(1);\n      i++;\n      template.push({ varName, default: arr[i] });\n    } else {\n      template.push(arr[i]);\n    }\n  }\n  return template;\n}\n\nexport const interpolateTemplate = (\n  template: Template,\n  variables: Meta\n): string =>\n  template.map(t => {\n    if (typeof t === 'string') {\n      return t;\n    } else {\n      const v = variables[t.varName]\n      return typeof v === 'string' ? v : t.default\n    }\n  }).join('')\n\nexport const extractDefaultVars = (template: Template): Record<string, string> =>\n  template.reduce((acc, t) => {\n    if (typeof t === 'object' && t.default != null) {\n      acc[t.varName] = t.default;\n    }\n    return acc;\n  }, {} as Record<string, string>)\n","export default \"/* pandoc's default CSS with nested if blocks etc. removed (see panwriter's templates.ts),\\n * `mainfont` and `monobackgroundcolor` defaults changed,\\n * as well as dark-mode and -webkit-print-color-adjust added.\\n */\\n\\nhtml {\\n  line-height: $if(linestretch)$$linestretch$$else$1.5$endif$;\\n  font-family: $if(mainfont)$$mainfont$$else$-apple-system, BlinkMacSystemFont, Segoe UI, sans-serif$endif$;\\n  font-size: $if(fontsize)$$fontsize$$else$20px$endif$;\\n  color: $if(fontcolor)$$fontcolor$$else$#1a1a1a$endif$;\\n  background-color: $if(backgroundcolor)$$backgroundcolor$$else$#fdfdfd$endif$;\\n}\\nbody {\\n  margin: 0 auto;\\n  max-width: 36em;\\n  padding-left: $if(margin-left)$$margin-left$$else$50px$endif$;\\n  padding-right: $if(margin-right)$$margin-right$$else$50px$endif$;\\n  padding-top: $if(margin-top)$$margin-top$$else$50px$endif$;\\n  padding-bottom: $if(margin-bottom)$$margin-bottom$$else$50px$endif$;\\n  hyphens: auto;\\n  word-wrap: break-word;\\n  text-rendering: optimizeLegibility;\\n  font-kerning: normal;\\n}\\n@media (max-width: 600px) {\\n  body {\\n    font-size: 0.9em;\\n    padding: 1em;\\n  }\\n}\\n@media print {\\n  p, h2, h3 {\\n    orphans: 3;\\n    widows: 3;\\n  }\\n  h2, h3, h4 {\\n    page-break-after: avoid;\\n  }\\n}\\np {\\n  margin: 1em 0;\\n}\\na {\\n  color: $if(linkcolor)$$linkcolor$$else$#1a1a1a$endif$;\\n}\\na:visited {\\n  color: $if(linkcolor)$$linkcolor$$else$#1a1a1a$endif$;\\n}\\nimg {\\n  max-width: 100%;\\n}\\nh1, h2, h3, h4, h5, h6 {\\n  margin-top: 1.4em;\\n}\\nh5, h6 {\\n  font-size: 1em;\\n  font-style: italic;\\n}\\nh6 {\\n  font-weight: normal;\\n}\\nol, ul {\\n  padding-left: 1.7em;\\n  margin-top: 1em;\\n}\\nli > ol, li > ul {\\n  margin-top: 0;\\n}\\nblockquote {\\n  margin: 1em 0 1em 1.7em;\\n  padding-left: 1em;\\n  border-left: 2px solid #e6e6e6;\\n  color: #606060;\\n}\\ncode {\\n  font-family: $if(monofont)$$monofont$$else$Menlo, Monaco, 'Lucida Console', Consolas, monospace$endif$;\\n  background-color: $if(monobackgroundcolor)$$monobackgroundcolor$$else$#f0f0f0$endif$;\\n  padding: .2em .4em;\\n  font-size: 85%;\\n  margin: 0;\\n}\\npre {\\n  margin: 1em 0;\\n  background-color: $if(monobackgroundcolor)$$monobackgroundcolor$$else$#f0f0f0$endif$;\\n  padding: 1em;\\n  overflow: auto;\\n}\\npre code {\\n  padding: 0;\\n  overflow: visible;\\n}\\n.sourceCode {\\n background-color: transparent;\\n overflow: visible;\\n}\\nhr {\\n  background-color: #1a1a1a;\\n  border: none;\\n  height: 1px;\\n  margin: 1em 0;\\n}\\ntable {\\n  margin: 1em 0;\\n  border-collapse: collapse;\\n  width: 100%;\\n  overflow-x: auto;\\n  display: block;\\n  font-variant-numeric: lining-nums tabular-nums;\\n}\\ntable caption {\\n  margin-bottom: 0.75em;\\n}\\ntbody {\\n  margin-top: 0.5em;\\n  border-top: 1px solid $if(fontcolor)$$fontcolor$$else$#1a1a1a$endif$;\\n  border-bottom: 1px solid $if(fontcolor)$$fontcolor$$else$#1a1a1a$endif$;\\n}\\nth {\\n  border-top: 1px solid $if(fontcolor)$$fontcolor$$else$#1a1a1a$endif$;\\n  padding: 0.25em 0.5em 0.25em 0.5em;\\n}\\ntd {\\n  padding: 0.125em 0.5em 0.25em 0.5em;\\n}\\nheader {\\n  margin-bottom: 4em;\\n  text-align: center;\\n}\\n#TOC li {\\n  list-style: none;\\n}\\n#TOC a:not(:hover) {\\n  text-decoration: none;\\n}\\n@media screen and (prefers-color-scheme: dark) {\\n  html {\\n    color: #d3d3d3;\\n    background-color: #101010;\\n  }\\n  a, a:visited {\\n    color: #d3d3d3;\\n  }\\n  blockquote {\\n    border-color: #707070;\\n    color: #d3d3d3;\\n  }\\n  pre, code {\\n    background-color: #1b1b1b;\\n  }\\n  hr {\\n    background-color: #d3d3d3;\\n  }\\n  tbody, th {\\n    border-color: #d3d3d3;\\n  }\\n}\\n* {\\n  /* force printing of CSS backgrounds like we use e.g. for code blocks */\\n  -webkit-print-color-adjust: exact;\\n}\\n\\ncode{white-space: pre-wrap;}\\nspan.smallcaps{font-variant: small-caps;}\\nspan.underline{text-decoration: underline;}\\ndiv.column{display: inline-block; vertical-align: top; width: 50%;}\\ndiv.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}\\nul.task-list{list-style: none;}\\nq { quotes: \\\"“\\\" \\\"”\\\" \\\"‘\\\" \\\"’\\\"; }\\n\";","import { useState } from 'react'\nimport { SketchPicker } from 'react-color'\n\nimport './ColorPicker.css'\n\ninterface Props {\n  id: string;\n  value: string;\n  onChange: (s: string) => void;\n}\n\nexport const ColorPicker = (props: Props) => {\n  const { id, value, onChange } = props\n  const [showPicker, setShowPicker] = useState(false)\n  const focus = () => setShowPicker(true)\n  return (\n    <div className='colorpicker'>\n      <input\n        type='text'\n        id={id}\n        value={value}\n        onFocus={focus}\n        onChange={e => onChange(e.target.value)}\n        />\n      <div\n        className='rectangle'\n        style={{background: value}}\n        onClick={focus}\n        />\n      { showPicker\n        ? <>\n            <div className='background' onClick={() => setShowPicker(false)} />\n            <SketchPicker\n              color={value}\n              disableAlpha={true}\n              presetColors={[]}\n              onChange={c => onChange(c.hex)}\n              />\n          </>\n        : null }\n    </div>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/back.13c91f44.svg\";","import { Fragment } from 'react'\nimport { AppState }    from '../../appState/AppState'\nimport { Action }   from '../../appState/Action'\nimport { defaultVars } from '../../renderPreview/templates/getCss'\nimport { ColorPicker } from '../ColorPicker/ColorPicker'\n\nimport back from './back.svg'\nimport './MetaEditor.css'\n\ntype Kv = String | Textarea | Number | Select | Color;\n\ninterface BaseKv {\n  name: string;\n  label: string;\n  placeholder?: string;\n  onLoad?: (v: string) => string;\n  onDone?: (v: string) => string;\n}\n\ninterface String extends BaseKv {\n  type: 'string';\n}\ninterface Textarea extends BaseKv {\n  type: 'textarea';\n}\ninterface Number extends BaseKv {\n  type: 'number';\n  step: number;\n}\ninterface Select extends BaseKv {\n  type: 'select';\n  options: string[];\n}\ninterface Color extends BaseKv {\n  type: 'color';\n}\n\ninterface Props {\n  state: AppState;\n  dispatch: React.Dispatch<Action>;\n}\n\nexport const MetaEditor = (props: Props) => {\n  const { state, dispatch } = props\n  const { doc } = state\n  const renderKv = (kv: Kv) =>\n    <Fragment key={kv.name}>\n      <label htmlFor={kv.name}>\n        { kv.label }:\n      </label>\n      { renderInput(kv) }\n    </Fragment>\n\n  const renderInput = (kv: Kv): JSX.Element => {\n    const { onLoad, onDone, placeholder } = kv\n    const key = kv.name\n    const val = doc.meta[key]?.toString() || defaultVars[key] || ''\n    const value = onLoad ? onLoad(val) : val\n    const onChange = (\n      e: string | React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>\n    ) => {\n      const v = typeof e === 'string' ? e : e.target.value\n      dispatch({ type: 'setMetaAndRender', key, value: onDone ? onDone(v) : v })\n    }\n    const common = { id: kv.name, placeholder, value, onChange }\n    switch(kv.type) {\n      case 'string':   return <input    {...common} type='text' />\n      case 'textarea': return <textarea {...common} />\n      case 'number':   return <input    {...common}  type='number' step={kv.step} />\n      case 'select':   return <select   {...common}>{kv.options.map(renderOption)}</select>\n      case 'color':    return <ColorPicker {...common} />\n    }\n  }\n\n  return (\n    <div className='metaeditor'>\n      <button\n        className='backbtn'\n        onClick={() => {\n          dispatch({ type: 'closeMetaEditorAndSetMd' })\n          dispatch({ type: 'toggleMetaEditorOpen' })\n        }}\n        >\n        <img alt='back' src={back} draggable={false} />\n      </button>\n      <div className='content'>\n        <h4>Document metadata</h4>\n        <div className='kvs'>\n          { metaKvs.map(renderKv) }\n        </div>\n        <h4>Layout</h4>\n        <p className='darkmodewarning'>\n          Previewing custom colors in dark mode is not supported.\n        </p>\n        <div className='kvs'>\n          { layoutKvs.map(renderKv) }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst renderOption = (o: string) =>\n  <option key={o} value={o || 'System font, sans-serif'}>{o}</option>\n\nconst metaKvs: Kv[] = [{\n  name: 'title'\n, label: 'Title'\n, type: 'string'\n}, {\n  name: 'author'\n, label: 'Author'\n, type: 'string'\n}, {\n  name: 'date'\n, label: 'Date'\n, type: 'string'\n}, {\n  name: 'lang'\n, label: 'Language'\n, type: 'string'\n, placeholder: 'en'\n}]\n\nconst layoutKvs: Kv[] = [{\n  name: 'mainfont'\n, label: 'Font'\n, type: 'select'\n, options: [\n    ''\n  , 'Georgia, serif'\n  , 'Helvetica, Arial, sans-serif'\n  , 'Palatino, Palatino Linotype, serif'\n  ]\n}, {\n  name: 'fontsize'\n, label: 'Font size'\n, type: 'number'\n, step: 1\n, onLoad: s => s ? parseInt(s, 10).toString() : ''\n, onDone: s => s + 'px'\n}, {\n  name: 'linestretch'\n, label: 'Line height'\n, type: 'number'\n, step: 0.1\n}, {\n  name: 'fontcolor'\n, label: 'Font color'\n, type: 'color'\n}, {\n  name: 'linkcolor'\n, label: 'Link color'\n, type: 'color'\n}, {\n  name: 'monobackgroundcolor'\n, label: 'Code bg'\n, type: 'color'\n}, {\n  name: 'backgroundcolor'\n, label: 'Background'\n, type: 'color'\n}, {\n  name: 'header-includes'\n, label: 'Include CSS'\n, type: 'textarea'\n, onLoad: s => s.startsWith('<style>\\n') && s.endsWith('\\n</style>') ? s.slice(8, -9) : s\n, onDone: s => `<style>\\n${s}\\n</style>`\n, placeholder: `blockquote {\n  font-style: italic;\n}`\n}]\n","import { forwardRef, useState } from 'react'\nimport { printPreview } from '../../renderPreview/scrolling'\n\nimport './Preview.css'\n\ninterface Props {\n  paginated: boolean;\n}\n\nexport const Preview = forwardRef((props: Props, ref: React.Ref<HTMLDivElement>) => {\n  const { paginated } = props\n  const [zoom, setZoom] = useState(1.0)\n  return (\n    <div className={`preview${paginated ? ' paginated' : ''}`}>\n      <div\n        ref={ref}\n        className='previewDiv'\n        style={{\n          transform: `scale(${zoom})`\n        , width:  `${100.0 / zoom}%`\n        , height: `${100.0 / zoom}%`\n        , transformOrigin: \"0 0\"\n        }}\n        />\n      <button className='zoomBtn zoomIn'  onClick={() => setZoom(z => z + 0.125)}>+</button>\n      <button className='zoomBtn zoomOut' onClick={() => setZoom(z => z - 0.125)}>-</button>\n      <button className='exportBtn' onClick={printPreview}>🖨</button>\n    </div>\n  )\n})\n","import { RefObject } from 'react'\n\nexport interface AppState {\n  doc: Doc;\n  metaEditorOpen: boolean;\n  split: ViewSplit;\n  paginated: boolean;\n  previewDivRef: RefObject<HTMLDivElement>;\n}\n\nexport interface Doc {\n  /** whole editor contents (in markdown) */\n  md: string;\n\n  /** part of `md` that's the yaml metadata */\n  yaml: string;\n\n  /** rest part of `md` */\n  bodyMd: string;\n\n  /** parsed yaml metadata */\n  meta: Meta;\n\n  /** bodyMd converted to HTML */\n  html: string\n\n  fileName?: string;\n  filePath?: string;\n  fileDirty: boolean;\n}\n\nexport type Meta = Record<string, JSON>\nexport type JSON = string | number | boolean | null | Meta[] | { [key: string]: JSON };\n\nexport const viewSplits = ['onlyEditor', 'split', 'onlyPreview'] as const\nexport type ViewSplit = typeof viewSplits[number]\n","interface Props {\n  active: boolean;\n  children: JSX.Element | JSX.Element[];\n  onClick: () => void;\n}\n\nexport const Button = (props: Props) =>\n  <button\n    className={props.active ? 'active' : ''}\n    onClick={props.onClick}\n    >\n    { props.children }\n  </button>\n","export default __webpack_public_path__ + \"static/media/macOS_window_close.c21794d6.svg\";","export default __webpack_public_path__ + \"static/media/macOS_window_maximize.6c8a1c55.svg\";","export default __webpack_public_path__ + \"static/media/macOS_window_minimize.433f72e8.svg\";","export default __webpack_public_path__ + \"static/media/metaEditor.74c7034b.svg\";","export default __webpack_public_path__ + \"static/media/notes.45f4d3e0.svg\";","export default __webpack_public_path__ + \"static/media/page.f63130e2.svg\";","export default __webpack_public_path__ + \"static/media/vertical_split.963a5adf.svg\";","export default __webpack_public_path__ + \"static/media/visibility.3ab43ae1.svg\";","import { AppState, viewSplits } from '../../appState/AppState'\nimport { Action }   from '../../appState/Action'\nimport { Button } from '../Button'\n\nimport macCloseIcon    from './macOS_window_close.svg'\nimport macMaximizeIcon from './macOS_window_maximize.svg'\nimport macMinimizeIcon from './macOS_window_minimize.svg'\n// icons are based on https://material.io/tools/icons/\nimport metaEditor      from './metaEditor.svg'\nimport notes           from './notes.svg'\nimport page            from './page.svg'\nimport verticalSplit   from './vertical_split.svg'\nimport visibility      from './visibility.svg'\nimport './Toolbar.css'\n\ninterface Props {\n  state: AppState;\n  dispatch: React.Dispatch<Action>;\n}\n\nexport const Toolbar = (props: Props) => {\n  const { state, dispatch } = props\n  const { doc, metaEditorOpen, split, paginated } = state\n  const { fileName, fileDirty } = doc\n  return (\n    <div className='toolbar'>\n      <div className='toolbararea'>\n        <div className='windowbuttons'>\n          { (['close', 'minimize', 'maximize'] as const).map(action =>\n              <div key={action} onClick={() => window.ipcApi?.send[action]()}>\n                <img alt={action} src={macIcons[action]} />\n              </div> )}\n        </div>\n        <div className='leftbtns'>\n          { split !== 'onlyPreview'\n            ? <Button\n                active={metaEditorOpen}\n                onClick={() => dispatch({ type: 'toggleMetaEditorOpen' })}\n                >\n                <img alt='Edit metadata' src={metaEditor} />\n              </Button>\n            : null }\n        </div>\n        <div className='filename'>\n          <span>{fileName}</span>\n          { fileDirty\n            ? <span className='edited'> — Edited</span>\n            : null }\n        </div>\n        <div className='btns'>\n          <div>\n            { split !== 'onlyEditor'\n              ? <Button\n                  active={paginated}\n                  onClick={() => dispatch({ type: 'togglePaginated' })}\n                  >\n                  <img alt='Paginated' src={page} />\n                </Button>\n              : null }\n          </div>\n          <div className='btngroup'>\n            { viewSplits.map(s => \n                <Button\n                  key={s}\n                  active={s === split}\n                  onClick={() => dispatch({ type: 'setSplitAndRender', split: s })}\n                  >\n                  <img alt={s} src={splitIcons[s]} />\n                </Button> )}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst macIcons = {\n  close:    macCloseIcon\n, maximize: macMaximizeIcon\n, minimize: macMinimizeIcon\n}\n\nconst splitIcons = {\n  onlyEditor: notes\n, split: verticalSplit\n, onlyPreview: visibility\n}\n","//@ts-ignore\nimport markdownItPandoc from 'markdown-it-pandoc'\n//@ts-ignore\nimport dirname from 'path-dirname'\nimport { Doc } from '../appState/AppState'\n\nconst mdItPandoc = markdownItPandoc()\nconst defaultImageRender = mdItPandoc.renderer.rules.image\n\n/**\n * converts the markdown in `doc` to HTML\n */\nexport const convertMd = (doc: Doc): string => {\n\n  if (doc.filePath) {\n    // rewrite image src attributes\n    mdItPandoc.renderer.rules.image = (tokens: any[], idx: number, options: unknown, env: unknown, self: unknown) => {\n      const token = tokens[idx]\n      const aIndex = token.attrIndex('src')\n      const srcTuple = token.attrs[aIndex]\n      const src = srcTuple[1]\n      srcTuple[1] = `file://${dirname(doc.filePath)}/${src}`\n      return defaultImageRender(tokens, idx, options, env, self)\n    }\n  }\n\n  return mdItPandoc\n    .use( mdItSourceMapPlugin(1 + getNrOfYamlLines(doc.yaml)) )\n    .render(doc.bodyMd)\n}\n\nconst mdItSourceMapPlugin = (nrLinesOffset=1) => {\n  return (md: any) => {\n    var temp = md.renderer.renderToken.bind(md.renderer)\n    md.renderer.renderToken = (tokens: any[], idx: number, options: unknown) => {\n      var token = tokens[idx]\n      if (token.level === 0 && token.map !== null && token.type.endsWith('_open')) {\n        token.attrPush(['data-source-line', token.map[0] + nrLinesOffset])\n      }\n      return temp(tokens, idx, options)\n    }\n  }\n}\n\nconst getNrOfYamlLines = (yaml: string): number => {\n  if (yaml.length === 0) {\n    return 0;\n  } else {\n    var nrOfLines = 2;\n    for(var i=0; i<yaml.length; ++i) {\n      if (yaml[i] === '\\n'){\n        nrOfLines++;\n      }\n    }\n    return nrOfLines;\n  }\n}\n","import { Doc } from '../appState/AppState'\nimport { getCss } from './templates/getCss'\n\nlet singleFrame: HTMLIFrameElement | undefined\n  , frame1: HTMLIFrameElement | undefined\n  , frame2: HTMLIFrameElement | undefined\n  ;\n\nconst injectMathCss = (contentWindow: Window) =>\n  [ './katex/katex.min.css', './katex/texmath.css'].forEach(href =>\n    contentWindow.document.head.appendChild( createLinkEl(href) )\n  )\n\nconst interceptClicks = (contentWindow: Window, e: MouseEvent) => {\n  e.preventDefault()\n  e.returnValue = false\n  if (e.target && ('href' in e.target)) {\n    const target = e.target as HTMLAnchorElement\n    const { href, hash } = target\n    const hrefStart = href.substr(0, 7)\n    if (hrefStart === \"file://\" && hash) {\n      // probably in-document navigation by hash\n      // this currently does not work in dev mode since hrefStart === http://localhost:3000, but works in prod build\n      // Note that you need to add ids to link to manually in markdown, like `# myTitle {#myId}`\n      const element = contentWindow.document.querySelector(hash)\n      if (element) {\n        element.scrollIntoView()\n      }\n    } else if (hrefStart === \"http://\" || hrefStart === \"https:/\") {\n      // external link\n      if (window.ipcApi) {\n        window.ipcApi.send.openLink(href)\n      } else {\n        window.open(href, '_blank')\n      }\n    }\n  }\n  return false\n}\n\nasync function insertFrame(\n  src: string\n, target: HTMLElement\n, noScriptsInFrame: boolean\n): Promise<HTMLIFrameElement> {\n  const frame = document.createElement('iframe')\n  if (noScriptsInFrame) {\n    // adding a sandbox attribute prevents script execution. but we still set the frame to have same-origin as parent,\n    // in order to write the text to be previewed into the frame directly instead of the slower window.postMessage.\n    // we need allow-modals for window.print()\n    frame.setAttribute('sandbox', 'allow-same-origin allow-modals')\n  }\n  frame.setAttribute('src', src)\n  frame.setAttribute('style', 'width: 100%; height: 100%;')\n  target.appendChild(frame)\n  return new Promise(resolve => {\n    const contentWindow = frame.contentWindow\n    contentWindow?.addEventListener('DOMContentLoaded', () => {\n      injectMathCss(contentWindow)\n      contentWindow.addEventListener('click', e => interceptClicks(contentWindow, e))\n      return resolve(frame);\n    })\n  })\n}\n\nasync function setupSingleFrame(target: HTMLElement) {\n  if (!singleFrame) {\n    singleFrame = await insertFrame('previewFrame.html', target, true)\n  }\n  if (frame1) {\n    frame1.remove();\n    frame1 = undefined\n  }\n  if (frame2) {\n    frame2.remove();\n    frame2 = undefined\n  }\n  return singleFrame\n}\n\nconst setupSwapFrames = async (target: HTMLElement) => {\n  if (!frame1 || !frame2) {\n    frame1 = await insertFrame('previewFramePaged.html', target, false)\n    frame2 = await insertFrame('previewFramePaged.html', target, false)\n  }\n  if (singleFrame) {\n    singleFrame.remove();\n    singleFrame = undefined\n  }\n  return [frame1, frame2] as const\n}\n\nconst renderAndSwap = async (\n  previewDiv: HTMLDivElement\n, renderFn: (w: Window) => Promise<Window>\n): Promise<Window> => {\n  const [f1, f2] = await setupSwapFrames(previewDiv)\n  if (!f1.contentWindow) {\n    throw Error('f1.contentWindow was null in renderAndSwap')\n  }\n  return renderFn(f1.contentWindow).then(() => {\n    if (!f1.contentWindow || !f2.contentWindow) {\n      throw Error(`contentWindow was null in renderAndSwap ${f1.contentWindow} ${f2.contentWindow}`)\n    }\n    f1.contentWindow?.scrollTo(0, f2.contentWindow.scrollY || 0)\n    f1.style.top = '0'\n    f2.style.top = '-1000vh'; // `display: none` would break pagedjs\n    [frame2, frame1] = [frame1, frame2]\n    return f1.contentWindow\n  })\n}\n\n\nexport const renderPlain = async (doc: Doc, previewDiv: HTMLDivElement): Promise<Window> => {\n  const { contentWindow } = await setupSingleFrame(previewDiv);\n  const content = [\n          '<style>', getCss(doc), '</style>'\n        , doc.meta['header-includes']\n        , doc.html\n        ].join('')\n  if (!contentWindow) {\n    throw Error('contentWindow was undefined in renderPlain')\n  }\n  contentWindow.document.body.innerHTML = content\n  return contentWindow\n}\n\nconst createStyleEl = (text: string) => {\n  const style = document.createElement('style')\n  style.textContent = text\n  return style\n}\n\nconst createLinkEl = (href: string): HTMLLinkElement => {\n  const link = document.createElement('link')\n  link.setAttribute('rel', 'stylesheet')\n  link.setAttribute('href', href)\n  return link\n}\n\nconst pagedjsStyleEl = createStyleEl(`\n@media screen {\n  .pagedjs_pages {\n    overflow: scroll;\n    padding: 90px 50px 50px 50px;\n  }\n\n  .pagedjs_page {\n    background-color: white;\n    margin: 0 auto;\n    margin-bottom: 50px;\n  }\n}\n`);\n\nexport const renderPaged = async (doc: Doc, previewDiv: HTMLDivElement): Promise<Window> => {\n  return renderAndSwap(previewDiv, async frameWindow => {\n\n    const cssStr     = getCss(doc)\n        , metaHtml   = doc.meta['header-includes']\n        , content    = doc.html\n        , frameHead  = frameWindow.document.head\n        , frameBody  = frameWindow.document.body\n        ;\n\n    // Unfortunately, pagedjs removes our style elements from <head>\n    // and appends its transformed styles – on each render. Thus we not only\n    // need to clear the body, but also remove the styles from the head.\n    frameHead.querySelectorAll('style').forEach(s => s.remove())\n    frameBody.innerHTML = content\n\n    // repopulate styles\n    injectMathCss(frameWindow)\n    if (typeof metaHtml === 'string') {\n      frameHead.insertAdjacentHTML('beforeend', metaHtml)\n    }\n    frameHead.appendChild( createStyleEl(cssStr) )\n    frameHead.appendChild(pagedjsStyleEl);\n\n    (frameWindow as any).PagedConfig = {\n      auto: false\n    };\n\n    await new Promise(resolve => {\n      const s = document.createElement('script')\n      s.src = './paged.polyfill.js'\n      s.async = false\n      s.addEventListener('load', resolve)\n      frameBody.appendChild(s)\n    })\n\n    // wait for images etc. to have loaded\n    await new Promise(resolve => {\n      if (frameWindow.document.readyState === 'complete') {\n        resolve(undefined)\n      } else {\n        frameWindow.addEventListener('load', resolve, {once: true})\n      }\n    })\n\n    return (frameWindow as any).PagedPolyfill.preview()\n  })\n}\n","import { AppState } from '../appState/AppState'\nimport { convertMd } from './convertMd'\nimport { renderPlain, renderPaged } from './renderPreviewImpl'\nimport { clearPreview, initScroll } from './scrolling'\n\nlet renderInProgress = false\n  , needsRerender = false\n  , stateBuffer: AppState\n\n/**\n * Converts md to html (eventually setting `state.doc.html`) and\n * renders into `state.previewDiv`.\n * Throttles when a render is still in progress.\n */\nexport const renderPreview = (state: AppState): void => {\n  needsRerender = true\n  if (state.split === 'onlyEditor') {\n    clearPreview()\n  } else {\n    renderNext(state)\n  }\n}\n\n/**\n * buffers the latest text change and renders when previous rendering is done\n */\nconst renderNext = (state: AppState) => {\n  stateBuffer = state\n  if (needsRerender && !renderInProgress) {\n    renderInProgress = true\n    render(state)\n      .catch(e => console.warn('renderer crashed:', e.message, e.stack))\n      .then(contentWindow => {\n        renderInProgress = false\n        if (contentWindow) {\n          initScroll(contentWindow, state.paginated)\n        }\n        renderNext(stateBuffer)\n      })\n    needsRerender = false\n  }\n}\n\nconst render = async (state: AppState): Promise<Window | undefined> => {\n  const { doc, paginated, previewDivRef } = state\n  doc.html = convertMd(doc)\n  const previewDiv = previewDivRef.current\n  if (previewDiv) {\n    if (paginated) {\n      return renderPaged(doc, previewDiv)\n    } else {\n      return renderPlain(doc, previewDiv)\n    }\n  }\n}\n","import { createRef, useEffect, useReducer } from 'react'\n\nimport { AppState }     from '../../appState/AppState'\nimport { appStateReducer }  from '../../appState/appStateReducer'\n\nimport { Editor }       from '../Editor/Editor'\nimport { MetaEditor }   from '../MetaEditor/MetaEditor'\nimport { Preview }      from '../Preview/Preview'\nimport { Toolbar }      from '../Toolbar/Toolbar'\nimport { IpcApi } from '../../../electron/preload'\nimport { renderPreview } from '../../renderPreview/renderPreview'\n\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport websiteText from '!!raw-loader!../../website.md'\n\nimport './App.css'\n\ndeclare global {\n  interface Window {\n    ipcApi?: IpcApi; // optional in order to keep ability to run React app without Electron\n  }\n}\n\nexport const App = () => {\n  const [state, dispatch] = useReducer(appStateReducer, initialState)\n  window.ipcApi?.setStateAndDispatch(state, dispatch)\n\n  useEffect(() => {\n    if (state.split !== 'onlyEditor') {\n      renderPreview(state)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.doc, state.split, state.paginated])\n\n  useEffect(() => {\n    if (!window.ipcApi) {\n      // website-mode\n      dispatch({ type: 'setSplitAndRender', split: 'split' })\n    }\n  }, [])\n\n  return (\n    <div className={`app ${state.split.toLowerCase()}`}>\n      <Toolbar state={state} dispatch={dispatch} />\n      <div className='editor'>\n        { state.metaEditorOpen\n          ? <MetaEditor state={state} dispatch={dispatch} />\n          : null }\n        <Editor state={state} dispatch={dispatch} />\n      </div>\n      <Preview\n        ref={state.previewDivRef}\n        paginated={state.paginated}\n        />\n    </div>\n  );\n}\n\nconst initialState: AppState = {\n  doc: {\n    md: window.ipcApi ? '' : websiteText\n  , yaml: ''\n  , bodyMd: ''\n  , meta: {}\n  , html: ''\n  , fileName: 'Untitled'\n  , filePath: undefined\n  , fileDirty: false\n  }\n, metaEditorOpen: false\n, split: 'onlyEditor'\n, paginated: false\n, previewDivRef: createRef()\n}\n","export default \"![](https://github.com/mb21/panwriter/raw/master/icons/icon.png){width=128 align=right}\\n\\n# PanWriter\\n\\nPanWriter is available on macOS, Windows and Linux.\\n\\n- [Download](https://github.com/mb21/panwriter/releases/){#download .btn}\\n- [Try online](/try/){.btn}\\n\\nYou also have to [install pandoc](https://pandoc.org/installing.html) to export to most formats.\\n\\n\\n## Distraction-free writing environment\\n\\nFocus on the content of your text. No fiddling around in menus or getting distracted by buttons. No selecting fonts and layouting before your text is actually written. Instead, you can write text in Markdown[^1] – a convention on how to write plain text files. Basically, it's like you would write an Email. It looks like the text on this page.\\n\\n[^1]: https://commonmark.org/help/\\n\\n![Markdown on the left, preview on the right](https://github.com/mb21/panwriter/raw/master/screenshot.png)\\n\\nPanWriter highlights a few things, like headings, for you. Other than that, it just gets out of the way, so you can focus on your text.\\n\\n\\n## Beautifully simple GUI – all the power of pandoc underneath\\n\\n[Pandoc] is a well-known and treasured tool among hackers.[^2] It can convert between all sorts of document formats – from and to Markdown, HTML webpages, MS Office Word `.docx`, EPUB eBooks, LaTeX for academic publishing, and many more. You can even generate PDF and PowerPoint slide-shows, as well as export to InDesign ICML. But until now, users had to master the command-line, before they could tap into the power of pandoc. No longer!\\n\\nBut if you eventually need to automate your workflow, it's easy to start using pandoc on the command-line, write [pandoc scripts] that transform your documents in highly customizable ways, or integrate with web services or other applications – all while continuing to write in PanWriter.\\n\\n[Pandoc]: https://pandoc.org\\n[pandoc scripts]: http://pandoc.org/lua-filters.html\\n[^2]: https://news.ycombinator.com/item?id=17855104\\n\\n\\n## Import/Export: Word, HTML and plenty of other formats\\n\\nSimply drag a `.docx`-file onto the PanWriter app: it will be converted to Markdown and opened so you can edit the text in the distraction-free writing environment of PanWriter. When you're done, use `File -> Export` to convert the text back to .docx, or any other of pandoc's output formats.\\n\\n![Export formats](https://github.com/mb21/panwriter/raw/master/screenshot-export.png)\\n\\n\\n## Paginated preview for print and PDF\\n\\nOnce you've written a first draft of your text, you might want to see how it would look like in print. Instead of exporting, you can simply open the preview pane. A unique feature among markdown editors is that PanWriter actually lays out your text on pages in the preview – suddenly your text becomes tangible, and you can see where pagebreaks end up.\\n\\nIt's not a good idea to start layouting before you've finished the hard work of the first few drafts. But once you're there, you can apply a pre-defined layout template – or tune the layout yourself by adding a few lines of [CSS], the layouting language of the web. Changes are reflected live in the preview.\\n\\n[CSS]: https://developer.mozilla.org/docs/Glossary/CSS\\n\\n![CSS is reflected live](https://github.com/mb21/panwriter/raw/master/screenshot-css.png)\\n\\n\\n## Free and Open Source\\n\\nPanWriter is free and open source software. Visit [PanWriter on GitHub](https://github.com/mb21/panwriter) to read the README or open an issue, if you have a question or would like to give feedback.\\n\";","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './components/App/App'\n\nwindow.ipcApi?.on.sendPlatform(platform => {\n  if (platform === 'darwin') {\n    document.body.classList.add('_macOS')\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}